var Promise = require('lie');
var readtools = require('lib/readtools');
var readconf = require('lib/readconf');
var makeRsync = require('lib/rsync');
var c = require('chalk');
// ----------------------------------------------------------------------------

module.exports = function (cmd, cwd, args, draftdir) {
	var conf = readconf(cwd, '.valkyrja');
	var tools = readtools(cwd, '.valkyrja');

	var valk = {

		rsync: function (path) {
			var rsync = makeRsync(conf);
			rsync.destination(path);
			rsync.source(cwd + '/');
			tools.confexport(cwd, args, conf, rsync);
			return rsync;
		},

		makeRsync: function () {
			return makeRsync(conf);
		},

		rsyncTo: function (path) {
			return new Promise(function (resolve, reject) {
				var rsync = makeRsync(conf);
				rsync.destination(path);
				rsync.source(cwd + '/');
				tools.confexport(cwd, args, conf, rsync);
				rsync.execute(function (error, code, cmd) {
					resolve();
				}, function (data) {
					process.stdout.write(data.toString());
				}, function (data) {
					process.stdout.write(data.toString());
				});
			})
		},

		build: function () {
			return new Promise(function (resolve, reject) {
				var buildstep = tools.build(cwd, args, conf, null, 'image', null);

				if (buildstep === true) {
					buildstep = Promise.resolve();
				}

				buildstep.then(function () {
					resolve();
				}, function () {
					reject();
				})
			})
		},

		tools: tools

	};

	if (tools[cmd] == null) {
		console.log(c.red('valkyrja') + ': unrecognized custom command');
		console.log(c.magenta('hint') + ': did you define it in your ' + c.gray('.valkyjra.js') + ' file?');
		process.exit(500);
	}

	var p = tools[cmd](cwd, args, conf, valk);

	if (p === true) {
		p = Promise.resolve();
	}

	if (p === false) {
		console.log('');
		console.log('Missing handling');
		p = Promise.reject();
	}

	return p.then(function () {
		console.log('');
		console.log(c.gray('[') + ' ' + c.blue(cmd + ' succesful') + ' ' + c.gray(']'));
		console.log('');
	}, function (reason) {
		console.log('');
		console.log(c.gray('[') + ' ' + c.red.dim(cmd + ' failed') + ' ' + c.gray(']'));
		console.log('');
		console.log(reason.stack || reason);
		console.log('');
	});
};
