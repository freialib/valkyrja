var c = require('chalk');

module.exports = function (cwd, args, draftdir) {
	var gutter = '  ';
	var indent = '  ';
	console.log('');
	console.log(gutter + 'Valkyrja (aka. valk), is a deployment tool.');
	console.log('');
	console.log(gutter + c.bold.dim.underline('USAGE'))
	console.log(gutter + 'valk' + ' ' + c.magenta('[command]') + ' ' + c.dim('[options]'));
	console.log('');
	console.log(gutter + c.bold.dim.underline('Commands'));
	console.log('');
	console.log(gutter + indent + c.magenta('make') + '    - create required files');
	console.log(gutter + indent + c.magenta('deploy') + '  - deploy local copy');
	console.log(gutter + indent + c.magenta('dry-run') + ' - simulate deploy');
	console.log(gutter + indent + c.magenta('clean') + '   - remove junk');
	console.log(gutter + indent + c.magenta('diff') + '    - diff server with local copy');
	console.log(gutter + indent + c.magenta('ls') + '      - list servers');
	console.log(gutter + indent + c.magenta('help') + '    - not this page');
	console.log('');
	console.log('-----------------------------------------------------------------------');
	console.log('');
	console.log(' ' + c.bold.dim.underline('Command') + ': ' + c.magenta('make'));
	console.log('');
	console.log(gutter + 'If no options are provided a .valkyrja.toml file will be created.');
	console.log(gutter + 'Otherwise, the following will happen based on the option used:');
	console.log('');
	console.log(gutter + indent + c.dim('user') + '    - create .valkyrja.user.toml');
	console.log(gutter + indent + c.dim('tools') + '   - create .valkyrja.js');
	console.log(gutter + indent + c.dim('all') + '     - create all files');
	console.log('');
	console.log(' ' + c.bold.dim.underline('Command') + ': ' + c.magenta('deploy'));
	console.log('');
	console.log(gutter + indent + 'valk ' + c.magenta('deploy') + ' ' + c.dim('[server-category]'));
	console.log('')
	console.log(gutter + 'Server category is anything specified under servers; except defaults.');
	console.log(gutter + 'If you have multiple entries under a category they\'ll all deploy.');
	console.log('');
	console.log(' ' + c.bold.dim.underline('Command') + ': ' + c.magenta('dry-run'));
	console.log('');
	console.log(gutter + indent + 'valk ' + c.magenta('dry-run') + ' ' + c.dim('[server-category]'));
	console.log('')
	console.log(gutter + 'Exactly like deploy only less bad ass.');
	console.log(gutter + 'All actions will only be simulated.');
	console.log('');
	console.log(' ' + c.bold.dim.underline('Command') + ': ' + c.magenta('diff'));
	console.log('');
	console.log(gutter + indent + 'valk ' + c.magenta('diff') + ' ' + c.dim('[server-category]'));
	console.log('');
	console.log(gutter + 'Create a diff all the files on all the servers in the category with');
	console.log(gutter + 'local copy.')
	console.log('');
	console.log(gutter + indent + 'valk ' + c.magenta('diff') + ' ' + c.dim('[server-category]') + ' ' + c.dim('[file]'));
	console.log('')
	console.log(gutter + 'Create a diff only specified file with local copy.');
	console.log('')
	console.log(' ' + c.bold.dim.underline('Command') + ': ' + c.magenta('clean'));
	console.log('')
	console.log(gutter + 'Remove any files create by valkyrja as part of deployment.');
	console.log(gutter + 'This is intended to cleanup cwd when valkyrja doesn\'t close properly.');
	console.log('')
	console.log(''); // fin
}
